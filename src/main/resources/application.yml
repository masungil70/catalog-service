spring:
  application:
    name: catalog-service
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 #설정 서버에 연결될때까지 기다리는 시간(밀리초)
      request-read-timeout: 5000 #설정 서버에 설정 데이터를 읽을때까지 기다리는 시간(밀리초)
      fail-fast: true #설정 서버 연결실패를 지명적 오류로 인식하게 설정함
      retry:
        max-attempts: 6 #최대 6회 시도
        initial-interval: 100 #최초 재시도 지연 시간(밀리초)
        max-interval: 2000 #재시도 지연 최대 시간(밀리초)
        multiplier: 1.1 #지연 시간 계산 승수
  datasource:
    username: root
    password: 70sungil
    url: jdbc:mariadb://192.168.1.3:53306/polardb_catalog
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5
  #  플라이웨이를 사용하면 아래 SQL 초기화 작업이 필요없음
  #  sql:
  #    init:
  #      mode: always
  # Flyway 설정
  flyway:
    enabled: true
    locations: classpath:db/migration

management:
  endpoints:
    web:
      exposure:
        include: refresh #http를 통해 /actuator/refresh 앤드 포인트를 노출한다

server:
  port: 9091
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5
#spring.profiles.active 속성을 설정하는 방법도 있으나 이런 방법 보다는 build.gradle 파일에 설정하는 방법이 좋은
#아래와 같이 설정하면 나중에 배포할 때는 제거해야 하는데 삭제하는 것을 실수 할 수 있음
#spring.profiles.active=testdata
#아래 구문을 build.gradle의 맨 아래부부에 추가하는 것이 좋음
#bootRun {
#	systemProperty 'spring.profiles.active', 'testdata'
#}

